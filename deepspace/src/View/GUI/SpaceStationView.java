/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package View.GUI;

import Controller.Controller;

import deepspace.SpaceStationToUI;
import deepspace.WeaponToUI;
import deepspace.ShieldToUI;
import deepspace.HangarToUI;

import java.util.ArrayList;
import java.awt.Component;

/**
 *
 * @author antonio
 */
public class SpaceStationView extends javax.swing.JPanel {

        
    /**
     * Creates new form SpaceStationView
     */
    public SpaceStationView() {
        initComponents();
    }

    void setSpaceStationToUI(SpaceStationToUI s){
        
        stationName.setText( s.getName() );
        ammoPowerLabel.setText( Float.toString( s.getAmmoPower() ) );
        shieldPowerLabel.setText( Float.toString( s.getShieldPower() ) );
        fuelUnitsLabel.setText( Float.toString( s.getFuelUnits() ) );
        medalsLabel.setText( Integer.toString( s.getnMedals() ) );
        
        ArrayList<WeaponToUI> weapons = s.getWeapons();
        WeaponView wView;
        for( WeaponToUI weapon : weapons ){
            wView = new WeaponView();
            wView.setWeaponToUI(weapon);
            weaponsPanel.add( wView ); 
        }


        ArrayList<ShieldToUI> shields = s.getShieldBoosters();
        ShieldBoosterView sView;
        for( ShieldToUI shield : shields ){
            sView = new ShieldBoosterView();
            sView.setShieldToUI(shield);
            shieldsPanel.add( sView ); 
        }
        
        String hangarTitle = (s.getHangar() != null) ? "Hangar con "+ Integer.toString( s.getHangar().getMaxElements() ) + " lugares": "No dispone de hangar";
        hangarPanel.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)), 
        hangarTitle));
        
        weapons.clear(); 
        shields.clear();
        HangarToUI hangar = s.getHangar();
        
        if( hangar != null ){
            weapons = hangar.getWeapons();
            shields = hangar.getShieldBoosters();
        }

        for( WeaponToUI weapon : weapons ){
            wView = new WeaponView();
            wView.setWeaponToUI(weapon);
            weaponsPanel.add( wView ); 
        }

        
        for( ShieldToUI shield : shields ){
            sView = new ShieldBoosterView();
            sView.setShieldToUI(shield);
            hangarPanel.add( sView ); 
        }

        
        repaint();
        revalidate();
        
    }
    
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        ammoPowerLabel = new javax.swing.JLabel();
        shieldPowerLabel = new javax.swing.JLabel();
        fuelUnitsLabel = new javax.swing.JLabel();
        medalsLabel = new javax.swing.JLabel();
        weaponsPanel = new javax.swing.JPanel();
        shieldsPanel = new javax.swing.JPanel();
        hangarPanel = new javax.swing.JPanel();
        stationName = new javax.swing.JLabel();
        EquipButton = new javax.swing.JButton();

        setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        jLabel1.setText("Potencia de Ataque: ");

        jLabel2.setText("Potencia de Defensa: ");

        jLabel3.setText("Nivel de Combustible: ");

        jLabel4.setText("Medallas: ");

        ammoPowerLabel.setText("jLabel5");

        shieldPowerLabel.setText("jLabel5");

        fuelUnitsLabel.setText("jLabel5");

        medalsLabel.setText("jLabel5");

        weaponsPanel.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)), "Potenciadores de fuego"));

        shieldsPanel.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)), "Potenciadores de defensa"));

        hangarPanel.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)), "Hangar"));

        stationName.setText("jLabel5");

        EquipButton.setText("Equipar");
        EquipButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                EquipButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(313, 313, 313)
                .addComponent(stationName)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(12, 12, 12)
                        .addComponent(EquipButton)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(hangarPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(shieldsPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(jLabel1)
                                        .addGap(18, 18, 18)
                                        .addComponent(ammoPowerLabel))
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(jLabel2)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(shieldPowerLabel)))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 247, Short.MAX_VALUE)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(jLabel4)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(medalsLabel))
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(jLabel3)
                                        .addGap(18, 18, 18)
                                        .addComponent(fuelUnitsLabel))))
                            .addComponent(weaponsPanel, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addContainerGap())))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(stationName)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(jLabel3)
                    .addComponent(ammoPowerLabel)
                    .addComponent(fuelUnitsLabel))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(jLabel4)
                    .addComponent(shieldPowerLabel)
                    .addComponent(medalsLabel))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(weaponsPanel, javax.swing.GroupLayout.PREFERRED_SIZE, 135, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(shieldsPanel, javax.swing.GroupLayout.PREFERRED_SIZE, 135, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(hangarPanel, javax.swing.GroupLayout.PREFERRED_SIZE, 133, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(EquipButton)
                .addContainerGap(13, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void EquipButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_EquipButtonActionPerformed
        // TODO add your handling code here:
        ArrayList<Integer> selectedWeapon = getSelectedWeaponsInHangar();        
        for( int i=0; i<selectedWeapon.size(); i++ ){
            MainView.controller.mountWeaponFromHangar( selectedWeapon.get(i) - i );
        }
        
        ArrayList<Integer> selectedShield = getSelectedShieldsInHangar();
        for( int i=0; i<selectedShield.size(); i++ ){
            MainView.controller.mountShieldBoosterFromHangar( selectedShield.get(i) - i );
        }

    }//GEN-LAST:event_EquipButtonActionPerformed


    ArrayList<Integer> getSelectedWeapons () {
        ArrayList<Integer> selectedWeapons = new ArrayList();
        int i = 0;
        for (Component c : weaponsPanel.getComponents()) {
            if (((WeaponView) c).isSelected()) {
                selectedWeapons.add(i);
            }
            i++;
        }
        return selectedWeapons;
    }

    ArrayList<Integer> getSelectedShields () {
        ArrayList<Integer> selectedShields = new ArrayList();
        int i = 0;
        for (Component c : shieldsPanel.getComponents()) {
            if (((ShieldBoosterView) c).isSelected()) {
                selectedShields.add(i);
            }
            i++;
        }
        return selectedShields;
    }
    
    ArrayList<Integer> getSelectedWeaponsInHangar(){
        ArrayList<Integer> selectedWeapons = new ArrayList();
        int i = 0;
        for (Component c : hangarPanel.getComponents()) {
           try{
            if (((WeaponView) c).isSelected()) {
                    selectedWeapons.add(i);
                }
            }
           catch( Exception e){}
           i++;
        }
        return selectedWeapons;        
    }
    
    ArrayList<Integer> getSelectedShieldsInHangar(){
        ArrayList<Integer> selectedShields = new ArrayList();
        int i = 0;
        for (Component c : hangarPanel.getComponents()) {
           try{
            if (((ShieldBoosterView) c).isSelected()) {
                    selectedShields.add(i);
                }
            }
           catch( Exception e){}
           i++;
        }
        return selectedShields;        
    }

    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton EquipButton;
    private javax.swing.JLabel ammoPowerLabel;
    private javax.swing.JLabel fuelUnitsLabel;
    private javax.swing.JPanel hangarPanel;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel medalsLabel;
    private javax.swing.JLabel shieldPowerLabel;
    private javax.swing.JPanel shieldsPanel;
    private javax.swing.JLabel stationName;
    private javax.swing.JPanel weaponsPanel;
    // End of variables declaration//GEN-END:variables
}
